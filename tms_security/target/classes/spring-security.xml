<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>
    <!--
     http：security：权限设置，none，排除资源
     http：auto-config：是否自动配置
                  设置为true时框架会提供默认的一些配置，例如提供默认的登录页面、登出处理等
                  设置为false时需要显示提供登录表单配置，否则会报错
           use-expressions：用于指定intercept-url中的access属性是否使用表达式（SpEL表达式）
   -->
    <!--1.配置不需要授权访问的资源-->
    <security:http security="none" pattern="/favicon.ico"/>
    <security:http security="none" pattern="/login.jsp"/>
    <security:http security="none" pattern="/login-fail.jsp"/>
    <security:http security="none" pattern="/auth-fail.jsp"/>

    <!-- 2.配置需要授权访问的资源及访问角色及权限-->
    <security:http auto-config="true" use-expressions="true">
        <!---自定义登录配置-->
        <security:form-login
                login-page="/login.jsp"
                default-target-url="/main.jsp"
                login-processing-url="/login.do"
                authentication-failure-url="/login-fail.jsp"
        />

        <!--访问拒绝处理器-->
        <security:access-denied-handler error-page="/auth-fail.jsp"/>

        <!--
          logout：退出登录
          logout-url：退出登录操作对应的请求路径
          logout-success-url：退出登录后的跳转页面
        -->
        <security:logout logout-url="/logout.do"
                         logout-success-url="/login.jsp"
                         invalidate-session="true"/>

        <!--配置三种角色,都可以访问的资源-->
        <security:intercept-url pattern="/main.jsp" access="hasAnyRole('ROLE_ADMIN','ROLE_READER','ROLE_OMS','ROLE_SUPER')"/>
        <!--有find权限，可以访问该资源-->
        <security:intercept-url pattern="/pages/checkitem.html" access="hasAuthority('find')"/>
        <!--有add、delete权限，可以访问该资源-->
        <security:intercept-url pattern="/pages/checkgroup.html" access="hasAnyAuthority('add','update')"/>

        <!--
           csrf：对应CsrfFilter过滤器
           disabled：如果使用自定义登录页面需要关闭此项，否则登录操作会被禁用（403）
          -->
        <security:csrf disabled="true"/>

    </security:http>


    <!-- 3.配置认证授权管理器（认证管理者、认证提供者、认证对象）-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="securityUserDetailsService">
            <!--
                  user-service：用于获取用户信息，提供给authentication-provider进行认证
             -->
            <!--
          <security:user-service>
              <security:user name="admin" authorities="ROLE_ADMIN,find,add,update,delete" password="{noop}123"/>
              <security:user name="zhangsan" authorities="ROLE_READER,find" password="{noop}123"/>
              <security:user name="lisi" authorities="ROLE_OMS,add,update" password="{noop}123"/>
            </security:user-service>
            -->
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置自定义认证对象-->
    <bean class="com.zhanglubin.tms.security.TMSSecurityUserDetailsService"
          id="securityUserDetailsService"/>
</beans>